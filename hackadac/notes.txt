-------------------------------------------------------------------------------
1.
-------------------------------------------------------------------------------



-------------------------------------------------------------------------------
2.
-------------------------------------------------------------------------------



-------------------------------------------------------------------------------
3.
-------------------------------------------------------------------------------



-------------------------------------------------------------------------------
4.
-------------------------------------------------------------------------------

Note:
Important point to stress is that our goal is to catch during integration 
phase, before the chip goes to foundry.


-------------------------------------------------------------------------------
5.
-------------------------------------------------------------------------------

Note:
Importance of specifying things correctly. Second example shows the specification 
of a master among various masters using the same AXI port.


-------------------------------------------------------------------------------
6.
-------------------------------------------------------------------------------

Note:
Important to specify security objectives which can be directly used in code not 
in text/word/excel format.
 an example with sva (system verilog assertions) follow.

-------------------------------------------------------------------------------
7.
-------------------------------------------------------------------------------

Note: 

Property/sequence they are system verilog assertion (sva) keyword. 
|-> means implies. The first property shows that value read from jtag port 
should not be the same as value read from processor. The sequence describes the password
11000 in sva. The last property shows that password sequence implies data read from jtag 
port should be equal to memory data.


-------------------------------------------------------------------------------
8.
-------------------------------------------------------------------------------
Note: 
we have methods to detect both of them, but functional bugs 
should be detected in higher level models not RTL.



-------------------------------------------------------------------------------
9.
-------------------------------------------------------------------------------



-------------------------------------------------------------------------------
10.
-------------------------------------------------------------------------------



-------------------------------------------------------------------------------
11.
-------------------------------------------------------------------------------
In trustzone a testcase from secure world can be use to trigger secure 
paths in RTL. and then compare other sceanrios with this point of view.


Cache SCU assumes several ports to the cache in a cache coherent system.
NIC(network) DMA controller can access the cache through ACP port.

-------------------------------------------------------------------------------
12.
-------------------------------------------------------------------------------



-------------------------------------------------------------------------------
13.
-------------------------------------------------------------------------------



-------------------------------------------------------------------------------
14.
-------------------------------------------------------------------------------



-------------------------------------------------------------------------------
15.
-------------------------------------------------------------------------------

Exemple de bug qu'on a trouvé avec differential memory scan. On a vu que 
Boot address est visible depuis "secure POV" and "hacker POV"

-------------------------------------------------------------------------------
16.
-------------------------------------------------------------------------------

A method to find RTL trails of bugs.

comme on a vu pendant le finale que c'est trés difficile de trouver 
le RTL qui gere la sécurité.

-------------------------------------------------------------------------------
17.
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
18.
-------------------------------------------------------------------------------
the hit count for each line is small. because jtag is ocassionaly 
exercised during random test.
-------------------------------------------------------------------------------
19.
-------------------------------------------------------------------------------
The hit count for jtag is high. We found the code which manages JTAG security.

-------------------------------------------------------------------------------
20.
-------------------------------------------------------------------------------

exmeple de bug trouvé on lisant le RTL trouvé avec diff coverage.

-------------------------------------------------------------------------------
21.
-------------------------------------------------------------------------------
exmeple de bug trouvé on lisant le RTL trouvé avec diff coverage.
-------------------------------------------------------------------------------
22.
-------------------------------------------------------------------------------
le table explique le phase 1.

ensuite On explique pourquoi  notre method n'as pas marché pendant le finale.
